name: COBOL Check Automation

on:
  push:
    branches: [ main ]

jobs:
  cobol-check:
    runs-on: ubuntu-latest
    env:
      ZOWE_HOST: 204.90.115.200
      ZOWE_PORT: 22

    steps:
      # 1) Checkout repo
      - name: Checkout
        uses: actions/checkout@v4

      # 2) Setup Java (required pelo cobol-check)
      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '11'

      # 3) Install system libs required by Keytar (libsecret) + unzip (if needed)
      - name: Install system dependencies (libsecret)
        run: |
          sudo apt-get update
          sudo apt-get install -y libsecret-1-0 libsecret-1-dev unzip

      # 4) Ensure a Node runtime for npm installs
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 5) Install Zowe CLI (v2 LTS)
      - name: Install Zowe CLI
        run: npm install -g @zowe/cli@zowe-v2-lts

      # 6) Add mainframe host to known_hosts to avoid interactive prompt
      - name: Add mainframe host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p $ZOWE_PORT -H $ZOWE_HOST >> ~/.ssh/known_hosts

      # 7) Create Zowe profiles (uses Keytar now that libsecret is installed)
      - name: Create Zowe profiles (SSH and zos-files)
        env:
          ZOWE_USER: ${{ secrets.ZOWE_USERNAME }}
          ZOWE_PASSWORD: ${{ secrets.ZOWE_PASSWORD }}
        run: |
          # create SSH profile
          zowe profiles create ssh default \
            --host $ZOWE_HOST \
            --port $ZOWE_PORT \
            --user $ZOWE_USER \
            --password "$ZOWE_PASSWORD" \
            --overwrite

          # create zos-files profile (used for uploads)
          zowe profiles create zos-files default \
            --host $ZOWE_HOST \
            --port $ZOWE_PORT \
            --user $ZOWE_USER \
            --password "$ZOWE_PASSWORD" \
            --overwrite

      # 8) Quick debug: list config to confirm profiles
      - name: Debug: show zowe config
        run: zowe config list || true

      # 9) Run your zowe_operations.sh (upload cobol-check to /z/<user>/cobolcheck)
      - name: Setup Mainframe Environment and Upload COBOL Check
        env:
          ZOWE_USERNAME: ${{ secrets.ZOWE_USERNAME }}
          ZOWE_PASSWORD: ${{ secrets.ZOWE_PASSWORD }}
        run: |
          chmod +x .github/scripts/zowe_operations.sh
          .github/scripts/zowe_operations.sh

      # 10) Run mainframe_operations.sh (execute cobolcheck, copy CC##99.CBL, submit JCL)
      - name: Run COBOL Check on Mainframe
        env:
          ZOWE_USERNAME: ${{ secrets.ZOWE_USERNAME }}
          ZOWE_PASSWORD: ${{ secrets.ZOWE_PASSWORD }}
        run: |
          chmod +x .github/scripts/mainframe_operations.sh
          .github/scripts/mainframe_operations.sh
