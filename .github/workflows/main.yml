# Nome do workflow
name: COBOL Check Automation

on:
  push:
    branches: [ main ]

jobs:
  cobol-check:
    runs-on: ubuntu-latest
    env:
      ZOWE_HOST: 204.90.115.200
      ZOWE_PORT: 22

    steps:
      # 1) Checkout repo
      - name: Checkout
        uses: actions/checkout@v4

      # 2) Setup Java (required pelo cobol-check)
      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '11'

      # 3) Install system libs required by Keytar (libsecret) + unzip
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libsecret-1-0 libsecret-1-dev unzip curl

      # 4) Setup Node.js (needed for npm global install)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 5) Install Zowe CLI
      - name: Install Zowe CLI
        run: npm install -g @zowe/cli@zowe-v2-lts

      # 6) Add mainframe host key to known_hosts
      - name: Add mainframe host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p $ZOWE_PORT -H $ZOWE_HOST >> ~/.ssh/known_hosts

      # 7) Create Zowe profiles (SSH and zos-files)
      - name: Create Zowe profiles
        env:
          ZOWE_USER: ${{ secrets.ZOWE_USERNAME }}
          ZOWE_PASSWORD: ${{ secrets.ZOWE_PASSWORD }}
        run: |
          zowe profiles create ssh default \
            --host $ZOWE_HOST \
            --port $ZOWE_PORT \
            --user $ZOWE_USER \
            --password "$ZOWE_PASSWORD" \
            --overwrite

          zowe profiles create zos-files default \
            --host $ZOWE_HOST \
            --port $ZOWE_PORT \
            --user $ZOWE_USER \
            --password "$ZOWE_PASSWORD" \
            --overwrite

      # 8) Garantir que o diretório cobol-check existe (download automático)
      - name: Ensure cobol-check directory
        run: |
          if [ ! -d "cobol-check" ]; then
            echo "Directory cobol-check not found, downloading..."
            curl -L -o cobol-check.zip https://github.com/openmainframeproject/cobol-check/releases/latest/download/cobol-check.zip
            unzip cobol-check.zip -d cobol-check
          fi

      # 9) Upload cobol-check e setup no mainframe
      - name: Setup Mainframe Environment and Upload COBOL Check
        env:
          ZOWE_USER_FOR_SCRIPT: ${{ secrets.ZOWE_USERNAME }}
        run: |
          chmod +x .github/scripts/zowe_operations.sh
          .github/scripts/zowe_operations.sh

      # 10) Run cobol-check no mainframe
      - name: Run COBOL Check on Mainframe
        env:
          ZOWE_USER_FOR_SCRIPT: ${{ secrets.ZOWE_USERNAME }}
        run: |
          LOWERCASE_USER=$(echo "$ZOWE_USER_FOR_SCRIPT" | tr '[:upper:]' '[:lower:]')
          zowe zos-uss issue ssh "cd /z/$LOWERCASE_USER/cobolcheck && bash .github/scripts/mainframe_operations.sh"
