# Nome do workflow
name: COBOL Check Automation

# Aciona o workflow em push para a branch main
on:
  push:
    branches: [ main ]

jobs:
  cobol-check:
    runs-on: ubuntu-latest
    steps:
      # 1. Faz o checkout do repositório
      - uses: actions/checkout@v2

      # 2. Configura o ambiente Java
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
      
      # 3. Instala a ferramenta Zowe CLI
      - name: Install Zowe CLI
        run: |
          npm install -g @zowe/cli@zowe-v2-lts
          # CORREÇÃO DEFINITIVA: Sintaxe do comando 'zowe config' corrigida
          zowe config set plugins.ssh.knownHostsPolicy accept-new -g

      # 4. Configura o ambiente no Mainframe e faz o Upload do COBOL Check
      - name: Setup Mainframe Environment and Upload COBOL Check
        env:
          ZOWE_CLI_USER: ${{ secrets.ZOWE_USERNAME }}
          ZOWE_CLI_PASSWORD: ${{ secrets.ZOWE_PASSWORD }}
          ZOWE_CLI_HOST: 204.90.115.200 # Host do Mainframe
          ZOWE_CLI_PORT: 22              # Porta SSH Padrão
        run: |
          chmod +x .github/scripts/zowe_operations.sh
          .github/scripts/zowe_operations.sh

      # 5. Executa o COBOL Check no Mainframe
      - name: Run COBOL Check on Mainframe
        env:
          ZOWE_CLI_USER: ${{ secrets.ZOWE_USERNAME }}
          ZOWE_CLI_PASSWORD: ${{ secrets.ZOWE_PASSWORD }}
          ZOWE_CLI_HOST: 204.90.115.200 # Host do Mainframe
          ZOWE_CLI_PORT: 22              # Porta SSH Padrão
        run: |
          LOWERCASE_USER=$(echo "${{ secrets.ZOWE_USERNAME }}" | tr '[:upper:]' '[:lower:]')
          zowe zos-uss issue ssh "cd /z/$LOWERCASE_USER/cobolcheck && bash .github/scripts/mainframe_operations.sh"

